# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: julia:latest

stages:          # List of stages for jobs, and their order of execution
  - build
  - test

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - julia -e 'using Pkg; Pkg.clone(pwd()); Pkg.build("RationalUnivariateRepresentation");'

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - julia -e 'using Pkg; Pkg.clone(pwd()); Pkg.build("RationalUnivariateRepresentation"); Pkg.test("RationalUnivariateRepresentation"; coverage = true)'  # adapted from https://gitlab.com/gitlab-examples/julia/-/blob/master/.gitlab-ci.yml
    # Comment out below if you do not want coverage results.
    - julia -e 'using Pkg; Pkg.add("Coverage"); 
      import RationalUnivariateRepresentation; cd(joinpath(dirname(pathof(RationalUnivariateRepresentation)), ".."));
      using Coverage; cl, tl = get_summary(process_folder());
      println("(", cl/tl*100, "%) covered")'

